//================= Hercules Database =====================================
//=       _   _                     _
//=      | | | |                   | |
//=      | |_| | ___ _ __ ___ _   _| | ___  ___
//=      |  _  |/ _ \ '__/ __| | | | |/ _ \/ __|
//=      | | | |  __/ | | (__| |_| | |  __/\__ \
//=      \_| |_/\___|_|  \___|\__,_|_|\___||___/
//================= License ===============================================
//= This file is part of Hercules.
//= http://herc.ws - http://github.com/HerculesWS/Hercules
//=
//= Copyright (C) 2015-2023 Hercules Dev Team
//=
//= Hercules is free software: you can redistribute it and/or modify
//= it under the terms of the GNU General Public License as published by
//= the Free Software Foundation, either version 3 of the License, or
//= (at your option) any later version.
//=
//= This program is distributed in the hope that it will be useful,
//= but WITHOUT ANY WARRANTY; without even the implied warranty of
//= MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//= GNU General Public License for more details.
//=
//= You should have received a copy of the GNU General Public License
//= along with this program.  If not, see <http://www.gnu.org/licenses/>.
//=========================================================================
//= Renewal Refine Database
//=========================================================================

/**************************************************************************
 ************* Entry structure ********************************************
 **************************************************************************
Armors/WeaponLevel1~4: {                                       // Specifies weapon level or armor type.
															   // - For armors, values of 100 add 1 armor defense.
															   // - For weapons, values of 100 add 1 ATK & MATK.
	StatsPerLevel: (int)                                       // This value is applied for ever level.
	RandomBonusStartLevel: (int)                               // This value specifies the start point for those levels that give a random bonus value (usually the first unsafe upgrade).
															   // - RandomBonusStartLevel is only applied for weapons, and not displayed client-side.
	RandomBonusValue: (int)                                    // A random number between 0 and (Random bonus start level - Upgrade level + 1) * this value is applied for all upgrades past.
	RefineryUISettings: (
		{
			Level: (int or array of int)                       // Holds either the individual refine level meant for this setting or an array defining a range
			                                                      of Low to Max level
			BlacksmithBlessing: (int) (optional)               // How many Blacksmith Blessing required for this range to be safe from breaking
			Announce: "(string)" (optional)                    // Sends an announcement server wide when a player reach this refine level using
			                                                      Refinery UI, this feature is only available starting from 2017-08-30 RagexeRE or
																  2017-09-06 Ragexe the field accepts the following values and it defaults to not announce
																  Success to set the announcement on item refine successful
																  Failure to set the announcement on item refine failure
																  Always to always announce it
			Items: {
				AegisName: {
					Type: "(string)"                           // The type to determine the chances used for this item, REFINE_CHANCE_TYPE_*
                                                                  constants are used in here
					Cost: (int) (optional)                     // Amount of zeny required
					FailureBehavior: "(string)" (optional)     // The expected behavior on failure for this item, the following strings are used in here
																  Destroy (default) sets the item to be destroyed on failure
																  Keep keeps the item after failure
																  Downgrade downgrades the item by one level on failure
				}
			}
		}
	)
	Rates: {                                                   // Per level configuration of the refine rates.
		Lv1~20: {                                              // Lv1 ~ Lv20.
			NormalChance: (int)                                // (optional, defaults to 100) Chance of successful refine using normal ores (100 = 100%).
			EnrichedChance: (int)                              // (optional, defaults to 100 for weapons below refine level 20, otherwise 0.) Chance of successful refine using enriched ores (100 = 100%).
			EventNormalChance: (int)                           // (optional, defaults to 100) Chance of successful refine using normal ores (100 = 100%) during a refine event.
			EventEnrichedChance: (int)                         // (optional, defaults to 100 for weapons below refine level 10, otherwise 0.) Chance of successful refine using enriched ores (100 = 100%) during a refine event.
			Bonus: (int)                                       // (optional, defaults to 0) Bonus (Armor) for this level of refine.
		}
		// Note: Refine levels that use default values need not be listed. (Example: Lv1: { NormalChance: 100 Bonus: 0 })
	}
}
**************************************************************************/

Armors: {
	StatsPerLevel: 1000
	RandomBonusStartLevel: 0
	RandomBonusValue: 0
	RefineryUISettings: (
		{
			Level: [1, 10]
			Items: {
				Elunium: {
					Type: "REFINE_CHANCE_TYPE_NORMAL"
					Cost: 3000
				}
				Enriched_Elunium: {
					Type: "REFINE_CHANCE_TYPE_ENRICHED"
					Cost: 3000
				}
			}
		},
	)
	Rates: {
		Lv10: {
			NormalChance: 100
			EnrichedChance: 100
			EventNormalChance: 100
			EventEnrichedChance: 100
		}
	}
}
WeaponLevel1: {
	StatsPerLevel: 1000
	RandomBonusStartLevel: 10
	RandomBonusValue: 0
	RefineryUISettings: (
		{
			Level: [1, 10]
			Items: {
				Phracon: {
					Type: "REFINE_CHANCE_TYPE_NORMAL"
					Cost: 100
				}
				Enriched_Oridecon: {
					Type: "REFINE_CHANCE_TYPE_ENRICHED"
					Cost: 100
				}
			}
		},
	)
	Rates: {
		Lv10: {
			NormalChance: 100
			EnrichedChance: 100
			EventNormalChance: 100
			EventEnrichedChance: 100
		}
	}
}
WeaponLevel2: {
	StatsPerLevel: 1500
	RandomBonusStartLevel: 10
	RandomBonusValue: 0
	RefineryUISettings: (
		{
			Level: [1, 10]
			Items: {
				Emveretarcon: {
					Type: "REFINE_CHANCE_TYPE_NORMAL"
					Cost: 500
				}
				Enriched_Oridecon: {
					Type: "REFINE_CHANCE_TYPE_ENRICHED"
					Cost: 500
				}
			}
		},
	)
	Rates: {
		Lv10: {
			NormalChance: 100
			EnrichedChance: 100
			EventNormalChance: 100
			EventEnrichedChance: 100
		}
	}
}
WeaponLevel3: {
	StatsPerLevel: 2000
	RandomBonusStartLevel: 10
	RandomBonusValue: 0
	RefineryUISettings: (
		{
			Level: [1, 10]
			Items: {
				Oridecon: {
					Type: "REFINE_CHANCE_TYPE_NORMAL"
					Cost: 5000
				}
				Enriched_Oridecon: {
					Type: "REFINE_CHANCE_TYPE_ENRICHED"
					Cost: 5000
				}
			}
		},
	)
	Rates: {
		Lv10: {
			NormalChance: 100
			EnrichedChance: 100
			EventNormalChance: 100
			EventEnrichedChance: 100
		}
	}
}
WeaponLevel4: {
	StatsPerLevel: 3000
	RandomBonusStartLevel: 10
	RandomBonusValue: 0
	RefineryUISettings: (
		{
			Level: [1, 10]
			Items: {
				Oridecon: {
					Type: "REFINE_CHANCE_TYPE_NORMAL"
					Cost: 20000
				}
				Enriched_Oridecon: {
					Type: "REFINE_CHANCE_TYPE_ENRICHED"
					Cost: 20000
				}
			}
		},
	)
	Rates: {
		Lv10: {
			NormalChance: 100
			EnrichedChance: 100
			EventNormalChance: 100
			EventEnrichedChance: 100
		}
	}
}
